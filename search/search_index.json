{"config":{"lang":["nl"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"LHM-Ribasim","text":"<p>Het Landelijk Hydrologisch Model (LHM) op basis van Local Surface Water (LSW) eenheden en het netwerk van het DistributieModel (DM) voor Ribasim.jl</p> <p></p> <p>Documentatie: https://d2hydro.github.io/lhm-ribasim</p> <p>Broncode: https://github.com/d2hydro/lhm-ribasim</p>"},{"location":"#auteurs","title":"Auteurs","text":""},{"location":"#inleiding","title":"Inleiding","text":""},{"location":"get_started/","title":"Gebruikershandleiding","text":""},{"location":"get_started/#downloaden-data","title":"Downloaden data","text":"<ul> <li>Download de bestanden van Deltares-ftp in <code>path\\naar\\de\\repos\\data</code>. Zie voor de juiste structuur en beschrijving: https://github.com/d2hydro/lhm-ribasim/tree/main/data</li> </ul> <p>## Runnen test-model  - Installeer RIBASIM volgens de handleiding. Unzip de inhoud van ribasim_cli.zip in de root van de resporitory, <code>path\\naar\\de\\repos\\ribasim_cli</code>.  - Run het test-model in een cmd met <code>path\\naar\\de\\repos\\scripts\\run_test_model.cmd</code>. Dit levert het volgende resultaat:</p> <p></p> <p>## Opzetten Python environment  - Bouw je environment met https://github.com/d2hydro/lhm-ribasim/blob/main/envs/environment_dev_spyder.yml - Clone de Deltares RIBASIM repository: https://github.com/Deltares/Ribasim - Run in de geactiveerde conda-environment <code>pip install -e .</code> in de ribasim repository in de sub-folder <code>python\\ribasim</code> (je vindt daar en pyproject.toml file)</p>"},{"location":"notebooks/bouw_lhm_topology/","title":"Bouw LHM topologie","text":"<p>Deze documentatie is gegenereerd via een Jupyter Notebook. Je kunt deze notebook downloaden via GitHub en de RIBASIM topologie nabouwen.</p> In\u00a0[1]: Copied! <pre>from config import DATA_DIR, LKM25_DIR, MOZART_DIR, LHM_DIR, LSW_DIR, LSM_KOPPELING_DIR, load_src\nimport geopandas as gpd\nload_src()\n\nfrom lhm.dm import find_unique_dm_links, find_routing_to_dm_links, find_shortest_dm_links, links_to_geodataframe\nfrom lhm.read import read_lsm_lhm, read_lsw_routing, read_dw_keys\nfrom lhm.lsm import snap_to_waterbodies\nfrom lhm.lsw import lsw_end_nodes, lsw_network\n</pre> from config import DATA_DIR, LKM25_DIR, MOZART_DIR, LHM_DIR, LSW_DIR, LSM_KOPPELING_DIR, load_src import geopandas as gpd load_src()  from lhm.dm import find_unique_dm_links, find_routing_to_dm_links, find_shortest_dm_links, links_to_geodataframe from lhm.read import read_lsm_lhm, read_lsw_routing, read_dw_keys from lhm.lsm import snap_to_waterbodies from lhm.lsw import lsw_end_nodes, lsw_network In\u00a0[2]: Copied! <pre>lsw_routing_dik = MOZART_DIR / r\"mozartin/lswrouting.dik\"\nlsw_routing_df = read_lsw_routing(lsw_routing_dik)\nlsw_gdf = gpd.read_file(LSW_DIR / \"lsws.shp\")\n\nlsw_gdf = lsw_gdf.dissolve(by=\"LSWFINAL\").reset_index()\nlsw_links_gdf, lsw_nodes_gdf = lsw_network(lsw_gdf, lsw_routing_df)\n</pre> lsw_routing_dik = MOZART_DIR / r\"mozartin/lswrouting.dik\" lsw_routing_df = read_lsw_routing(lsw_routing_dik) lsw_gdf = gpd.read_file(LSW_DIR / \"lsws.shp\")  lsw_gdf = lsw_gdf.dissolve(by=\"LSWFINAL\").reset_index() lsw_links_gdf, lsw_nodes_gdf = lsw_network(lsw_gdf, lsw_routing_df) In\u00a0[3]: Copied! <pre># Bepalen lsw-knopen die gekoppeld moeten worden aan een DM-knoop\nlsw_end_nodes_gdf = lsw_end_nodes(lsw_links_gdf, lsw_gdf)\nprint(f\"we moeten {len(lsw_end_nodes_gdf)} koppelen aan DM-knopen\")\nlsw_end_nodes_gdf.explore()\n</pre> # Bepalen lsw-knopen die gekoppeld moeten worden aan een DM-knoop lsw_end_nodes_gdf = lsw_end_nodes(lsw_links_gdf, lsw_gdf) print(f\"we moeten {len(lsw_end_nodes_gdf)} koppelen aan DM-knopen\") lsw_end_nodes_gdf.explore() <pre>we moeten 2309 koppelen aan DM-knopen\n</pre> Out[3]: Make this Notebook Trusted to load map: File -&gt; Trust Notebook In\u00a0[4]: Copied! <pre># Inlezen DW-keys file\ndw_key_file = LHM_DIR / r\"dm/txtfiles_git/dwkeys.txt\"\ndw_keys_df = read_dw_keys(dw_key_file)\n\n# Inlezen LSW-netwerk\nlsw_dm_links = find_unique_dm_links(lsw_end_nodes_gdf, dw_keys_df)\n\n# Tonen resultaat\nprint(f\"{len(lsw_dm_links)} LSWs gekoppeld aan DM-knopen\")\nlsw_end_nodes_gdf = lsw_end_nodes_gdf.loc[~lsw_end_nodes_gdf.LSWFINAL.isin([i[0] for i in lsw_dm_links])]\nprint(f\"We moeten nog {len(lsw_end_nodes_gdf)} koppelen aan DM-knopen\")\nlsw_end_nodes_gdf.explore()\n</pre> # Inlezen DW-keys file dw_key_file = LHM_DIR / r\"dm/txtfiles_git/dwkeys.txt\" dw_keys_df = read_dw_keys(dw_key_file)  # Inlezen LSW-netwerk lsw_dm_links = find_unique_dm_links(lsw_end_nodes_gdf, dw_keys_df)  # Tonen resultaat print(f\"{len(lsw_dm_links)} LSWs gekoppeld aan DM-knopen\") lsw_end_nodes_gdf = lsw_end_nodes_gdf.loc[~lsw_end_nodes_gdf.LSWFINAL.isin([i[0] for i in lsw_dm_links])] print(f\"We moeten nog {len(lsw_end_nodes_gdf)} koppelen aan DM-knopen\") lsw_end_nodes_gdf.explore() <pre>1784 LSWs gekoppeld aan DM-knopen\nWe moeten nog 525 koppelen aan DM-knopen\n</pre> Out[4]: Make this Notebook Trusted to load map: File -&gt; Trust Notebook In\u00a0[5]: Copied! <pre># Inlezen LSM3-DM csv-bestanden\nlsm3_locations_csv = LSM_KOPPELING_DIR / \"LSM3_locations.csv\"\nknoop_district_csv = LSM_KOPPELING_DIR / \"LSM3_DMKnoopDistrict_childs.csv\"\n\n# Tonen LSM lateralen met DM-knoopinformatie\nlsm_lhm_gdf = read_lsm_lhm(lsm3_locations_csv, knoop_district_csv)\nlsm_lhm_gdf.explore()\n</pre> # Inlezen LSM3-DM csv-bestanden lsm3_locations_csv = LSM_KOPPELING_DIR / \"LSM3_locations.csv\" knoop_district_csv = LSM_KOPPELING_DIR / \"LSM3_DMKnoopDistrict_childs.csv\"  # Tonen LSM lateralen met DM-knoopinformatie lsm_lhm_gdf = read_lsm_lhm(lsm3_locations_csv, knoop_district_csv) lsm_lhm_gdf.explore() Out[5]: Make this Notebook Trusted to load map: File -&gt; Trust Notebook In\u00a0[6]: Copied! <pre># inlezen LKM-waterlichamen en LKM-links\nlkm_waterlichamen_shp = LKM25_DIR / \"KRW-waterlichamen_SGBP3.shp\"\nlkm_waterlichamen_gdf = gpd.read_file(lkm_waterlichamen_shp)\n\nlkm_links_shp = LKM25_DIR / \"LKM25_Links.shp\"\nlkm_links_gdf = gpd.read_file(lkm_links_shp)\n</pre> # inlezen LKM-waterlichamen en LKM-links lkm_waterlichamen_shp = LKM25_DIR / \"KRW-waterlichamen_SGBP3.shp\" lkm_waterlichamen_gdf = gpd.read_file(lkm_waterlichamen_shp)  lkm_links_shp = LKM25_DIR / \"LKM25_Links.shp\" lkm_links_gdf = gpd.read_file(lkm_links_shp) In\u00a0[7]: Copied! <pre># zoeken naar nieuwe lsw-dm-links\n_lsw_dm_links = find_routing_to_dm_links(\n    lsw_end_nodes_gdf,\n    lsw_gdf,\n    dw_keys_df,\n    lkm_links_gdf,\n    lsm_lhm_gdf,\n    lkm_waterlichamen_gdf\n)\n\n# Tonen resultaat\nlsw_dm_links += _lsw_dm_links\nprint(f\"{len(_lsw_dm_links)} LSWs koppelingen gemaakt aan DM-knopen\") \nlsw_end_nodes_gdf = lsw_end_nodes_gdf.loc[~lsw_end_nodes_gdf.LSWFINAL.isin([i[0] for i in _lsw_dm_links])]\nprint(f\"We moeten {len(lsw_end_nodes_gdf)} koppelen aan DM-knopen\")\nlsw_end_nodes_gdf.explore()\n</pre> # zoeken naar nieuwe lsw-dm-links _lsw_dm_links = find_routing_to_dm_links(     lsw_end_nodes_gdf,     lsw_gdf,     dw_keys_df,     lkm_links_gdf,     lsm_lhm_gdf,     lkm_waterlichamen_gdf )  # Tonen resultaat lsw_dm_links += _lsw_dm_links print(f\"{len(_lsw_dm_links)} LSWs koppelingen gemaakt aan DM-knopen\")  lsw_end_nodes_gdf = lsw_end_nodes_gdf.loc[~lsw_end_nodes_gdf.LSWFINAL.isin([i[0] for i in _lsw_dm_links])] print(f\"We moeten {len(lsw_end_nodes_gdf)} koppelen aan DM-knopen\") lsw_end_nodes_gdf.explore() <pre>457 LSWs koppelingen gemaakt aan DM-knopen\nWe moeten 193 koppelen aan DM-knopen\n</pre> Out[7]: Make this Notebook Trusted to load map: File -&gt; Trust Notebook In\u00a0[8]: Copied! <pre># DM-knopen en -links inlezen\ndm_nodes_shp = LHM_DIR / r\"dm/data_dvc/DM_nodes.shp\"\ndm_links_shp = LHM_DIR / r\"dm/data_dvc/DM_links.shp\"\n\ndm_nodes_gdf = gpd.read_file(dm_nodes_shp)\ndm_links_gdf = gpd.read_file(dm_links_shp)\n\ndm_nodes_gdf.columns = [i.strip() for i in dm_nodes_gdf.columns]\ndm_links_gdf.columns = [i.strip() for i in dm_links_gdf.columns]\n\n# Zoeken naar nieuwe DM-links\n_lsw_dm_links = find_shortest_dm_links(lsw_end_nodes_gdf, dw_keys_df, dm_nodes_gdf)\n\n# Tonen resultaat\nlsw_dm_links += _lsw_dm_links\nprint(f\"{len(_lsw_dm_links)} LSWs koppelingen gemaakt aan DM-knopen\") \nlsw_end_nodes_gdf = lsw_end_nodes_gdf.loc[~lsw_end_nodes_gdf.LSWFINAL.isin([i[0] for i in _lsw_dm_links])]\nprint(f\"We moeten {len(lsw_end_nodes_gdf)} koppelen aan DM-knopen\")\n</pre> # DM-knopen en -links inlezen dm_nodes_shp = LHM_DIR / r\"dm/data_dvc/DM_nodes.shp\" dm_links_shp = LHM_DIR / r\"dm/data_dvc/DM_links.shp\"  dm_nodes_gdf = gpd.read_file(dm_nodes_shp) dm_links_gdf = gpd.read_file(dm_links_shp)  dm_nodes_gdf.columns = [i.strip() for i in dm_nodes_gdf.columns] dm_links_gdf.columns = [i.strip() for i in dm_links_gdf.columns]  # Zoeken naar nieuwe DM-links _lsw_dm_links = find_shortest_dm_links(lsw_end_nodes_gdf, dw_keys_df, dm_nodes_gdf)  # Tonen resultaat lsw_dm_links += _lsw_dm_links print(f\"{len(_lsw_dm_links)} LSWs koppelingen gemaakt aan DM-knopen\")  lsw_end_nodes_gdf = lsw_end_nodes_gdf.loc[~lsw_end_nodes_gdf.LSWFINAL.isin([i[0] for i in _lsw_dm_links])] print(f\"We moeten {len(lsw_end_nodes_gdf)} koppelen aan DM-knopen\") <pre>193 LSWs koppelingen gemaakt aan DM-knopen\nWe moeten 0 koppelen aan DM-knopen\n</pre> In\u00a0[9]: Copied! <pre># lsw-dm-links naar een geodataframe\nlsw_dm_links_gdf = links_to_geodataframe(lsw_dm_links, lsw_nodes_gdf, dm_nodes_gdf)\n</pre> # lsw-dm-links naar een geodataframe lsw_dm_links_gdf = links_to_geodataframe(lsw_dm_links, lsw_nodes_gdf, dm_nodes_gdf) <pre>[######### ] 100.0% completed\r</pre> In\u00a0[10]: Copied! <pre># Tonen kaart\nimport folium\nm = lsw_links_gdf.explore(name=\"lsw links\", color=\"blue\")\nm = lsw_dm_links_gdf.explore(m=m, name=\"lsw-dm links\", color=\"green\")\nm = dm_links_gdf.explore(m=m, name=\"dm links\", color=\"red\")\n\nfolium.LayerControl().add_to(m)\n\nm\n</pre> # Tonen kaart import folium m = lsw_links_gdf.explore(name=\"lsw links\", color=\"blue\") m = lsw_dm_links_gdf.explore(m=m, name=\"lsw-dm links\", color=\"green\") m = dm_links_gdf.explore(m=m, name=\"dm links\", color=\"red\")  folium.LayerControl().add_to(m)  m Out[10]: Make this Notebook Trusted to load map: File -&gt; Trust Notebook"},{"location":"notebooks/bouw_lhm_topology/#aanpak","title":"Aanpak\u00b6","text":"<ol> <li><p>LSWs routen naar benedenstroomse LSWs Aanname:</p> <ul> <li>We gaan ervan uit dat LSWs die afwateren op andere LSWs n\u00edet tevens afwateren op het DM.</li> </ul> <p>Resultaat: 2309 LSW eindpunten moeten gekoppeld worden aan DM knopen</p> </li> <li><p>LSW eindpunten naar 1 unieke DM-knoop Methode:</p> <ul> <li>Check voor iedere LSW eindpunt het bijbehorende district</li> <li>Check welke districten aan slechts 1 DM-knoop worden gekoppeld door uitlezen van dwkeys.txt</li> </ul> <p>Resultaat: 1784 LSWs gekoppeld aan DM-knopen</p> </li> <li><p>LSW eindpunten naar DM-knopen via LSM-lateralen: Data:</p> <ul> <li>We hebben een routing LKM file (LKM25_links) die de afvoerrichting naar LKM netwerk weergeeft (blauwe pijlen in de figuur)</li> <li>We hebben een LKM waterlichamen file (lkm_waterlichamen_shp) (rode polygonen in de figuur)</li> <li>We hebben een LSM3 lateraal file (LSM3_DMKnoopDistrict_childs.csv) die aangeeft welke LSM3 lateral aan DM knoop is gekoppeld (groene punten in de figuur)</li> </ul> <p>Methode:</p> <ol> <li>We volgen de routing in de LKM file van de LSW eindpunten tot deze uitkomt in een LKM waterlichaam.</li> <li>We zoeken de dichtsbijzijnde LSM3 lateraal van het LKM waterlichaam</li> <li>We lezen de bijbehorende DM knoop uit de LSM3_DMKnoopDistrict_childs.csv</li> </ol> <p>Resultaat: 457 LSWs koppelingen gemaakt aan DM-knopen</p> <p></p> </li> <li><p>LSW eindpunten naar dichtsbijzijnde DM-knoop:</p> <p>De LSW eindpunten die overblijven (193) koppelen we aan de dichtsbijzijnde DM-knoop</p> </li> </ol>"},{"location":"notebooks/bouw_lhm_topology/#1-lsws-routen-naar-benedenstroomse-lsws","title":"1. LSWs routen naar benedenstroomse LSWs\u00b6","text":""},{"location":"notebooks/bouw_lhm_topology/#lsw-naar-lsw-netwerk","title":"LSW-naar-LSW netwerk\u00b6","text":"<p>Vanuit de geleverde <code>lsws.shp</code> en <code>lswrouting.dik</code> maken we een netwerk van LSWs.</p>"},{"location":"notebooks/bouw_lhm_topology/#lsw-eindpunten","title":"LSW eindpunten\u00b6","text":"<p>We gaan ervan uit dat LSWs die afwateren op andere LSWs n\u00edet tevens afwateren op het DM. We gaan vanaf dit punt LSWs die niet gekoppeld zijn aan andere LSWs koppelen aan het DM. Hieronder tonen we deze LSWs op de kaart</p>"},{"location":"notebooks/bouw_lhm_topology/#2-lsw-eindpunten-naar-1-unieke-dm-knoop","title":"2. LSW eindpunten naar 1 unieke DM-knoop\u00b6","text":"<p>Vanuit <code>dwkeys.txt</code>kunnen we per district kijken aan welke DM knoop wordt gekoppeld. Wanneer een district slechts koppelt aan 1 DM-knoop, dan betekent dit dat alle LSWs in dit district gekoppeld moeten worden aan deze knoop.</p> <p>We doen dit en tonen de overgebleven nog niet gekoppelde LSWs.</p>"},{"location":"notebooks/bouw_lhm_topology/#3-lsw-eindpunten-naar-dm-knopen-via-lsm-lateralen","title":"3. LSW eindpunten naar DM-knopen via LSM-lateralen\u00b6","text":"<p>Vanuit de bestanden <code>LSM3_locations.csv</code>, <code>LSM3_DMKnoopDistrict_childs.csv</code> kunnen we uitzoeken hoe aan welke DM-knoop een LSM-lateraal is gekoppeld. Een LSM-lateraal ligt meestal vrij netjes in het watersysteem geschematiseerd.</p>"},{"location":"notebooks/bouw_lhm_topology/#koppelen-lsw-via-lsm-lateralen-aan-dm","title":"Koppelen LSW via LSM-lateralen aan DM\u00b6","text":"<p>Voor de nog overgebleven LSWs zoeken we de DM-knoop via LSM-lateralen. We nemen deze stappen:</p> <ol> <li>We kijken of er LSM-lateralen van het juist district liggen in het gebied van de LSW</li> <li>We kijken aan welke unieke DM-knopen deze lateralen zijn verbonden. We verbinden de LSW met al deze districten</li> </ol>"},{"location":"notebooks/bouw_lhm_topology/#4-lsw-eindpunten-naar-dichtsbijzijnde-dm-knoop","title":"4. LSW eindpunten naar dichtsbijzijnde DM-knoop\u00b6","text":"<p>Als uiterste mogelijkheid koppelen we LSW-knopen aan de meest dichtbijzijnde DM-knoop die voorkomt in de DM-keys</p>"},{"location":"notebooks/bouw_lhm_topology/#5-resultaat","title":"5. Resultaat\u00b6","text":"<p>In de kaart hieronder zie je het resultaat</p>"}]}